language: cpp
compiler: gcc
sudo: require
dist: xenial

install:
  - sudo apt-get -y install build-essential debianutils automake gcc g++ make libopenscenegraph-dev libsndfile-dev libwxgtk3.0-dev libboost-dev libasio-dev libboost-date-time-dev libboost-system-dev alsoft-conf


script:
  - wget -c "https://github.com/kcat/openal-soft/archive/openal-soft-1.20.1.tar.gz" 
  - tar -xzf openal-soft-1.20.1.tar.gz && cd openal-soft-openal-soft-1.20.1 && cd build && cmake -DALSOFT_UTILS=OFF -DALSOFT_NO_CONFIG_UTIL=OFF .. && make && sudo make install
  - cd ../..
  - mkdir build
  - cd build
  - mkdir AppDir
  - cp ../app_image_resources/binaural-audio-editor.png ./AppDir
  - cp ../app_image_resources/binaural-audio-editor.desktop ./AppDir
  - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DwxWidgets_CONFIG_EXECUTABLE=/usr/bin/wx-config -DDATAPATH=${HOME}/.binaural-audio-editor/resources/
  - make -j$(nproc)
  - make install DESTDIR=AppDir
  - wget -c "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
  - chmod a+x linuxdeploy*.AppImage
  - ./linuxdeploy*.AppImage --appdir AppDir --icon-file ./AppDir/binaural-audio-editor.png --desktop-file ./AppDir/binaural-audio-editor.desktop  --output appimage

after_success:
  - find ./AppDir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - wget -c "https://github.com/probonopd/uploadtool/raw/master/upload.sh"
  - chmod a+x upload.sh
  - bash ./upload.sh ./Binaural*.AppImage

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
